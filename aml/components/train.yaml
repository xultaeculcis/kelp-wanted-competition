$schema: https://azuremlschemas.azureedge.net/latest/commandComponent.schema.json
type: command

name: train
version: 0.0.1
display_name: Model training
description: Trains the Kelp Forest Segmentation model.

inputs:
  data_dir:
    type: uri_folder
    description: The training data dir.
  metadata_file:
    type: uri_file
    description: The metadata file.
  dataset_stats_file:
    type: uri_file
    description: The dataset stats file.
  cv_split:
    type: integer
    default: 8
    description: The CV split.
  batch_size:
    type: integer
    default: 32
    description: The batch size.
  num_workers:
    type: integer
    default: 4
    description: The number of workers for dataloader.
  image_size:
    type: integer
    default: 352
    description: The image size.
  resize_strategy:
    type: string
    default: pad
    description: The image resize strategy - one of [pad, resize].
  interpolation:
    type: string
    default: nearest
    description: The image resize strategy - one of [nearest, nearest-exact, bilinear, bicubic].
  bands:
    type: string
    default: R,G,B,SWIR,NIR,QA,DEM
    description: The band order.
  spectral_indices:
    type: string
    default: DEMWM,NDVI,ATSAVI,AVI,CI,ClGreen,GBNDVI,GVMI,IPVI,KIVU,MCARI,MVI,NormNIR,PNDVI,SABI,WDRVI,mCRIG
    description: The spectral indices to append to input.
  use_weighted_sampler:
    type: string
    default: True
    description: Use weighted random sampler.
  samples_per_epoch:
    type: integer
    default: 10240
    description: The number of samples per epoch.
  fill_missing_pixels_with_torch_nan:
    type: string
    default: True
    description: Fill missing pixels with torch.nan.
  mask_using_qa:
    type: string
    default: True
    description: Mask corrupted pixels using QA band.
  mask_using_water_mask:
    type: string
    default: True
    description: Mask land pixels using DEM water mask.
  has_kelp_importance_factor:
    type: number
    default: 3.0
    description: The importance factor for has_kelp flag.
  kelp_pixels_pct_importance_factor:
    type: number
    default: 0.2
    description: The importance factor for kelp pixels percentage.
  qa_ok_importance_factor:
    type: number
    default: 0.0
    description: The importance factor for qa_ok flag.
  qa_corrupted_pixels_pct_importance_factor:
    type: number
    default: -1.0
    description: The importance factor for QA layer corrupted pixels percentage.
  almost_all_water_importance_factor:
    type: number
    default: 0.5
    description: The importance factor for almost_all_water flag.
  dem_nan_pixels_pct_importance_factor:
    type: number
    default: 0.25
    description: The importance factor for DEM layer zero pixels percentage.
  dem_zero_pixels_pct_importance_factor:
    type: number
    default: -1.0
    description: The importance factor for DEM layer NaN pixels percentage.
  normalization_strategy:
    type: string
    default: quantile
    description: The normalization strategy.
  architecture:
    type: string
    default: unet
    description: The network architecture.
  encoder:
    type: string
    default: tu-efficientnet_b5
    description: The network encoder.
  encoder_weights:
    type: string
    default: imagenet
    description: The encoder weights.
  pretrained:
    type: string
    default: True
    description: Use pretrained model.
  lr:
    type: number
    default: 3e-4
    description: The learning rate.
  optimizer:
    type: string
    default: adamw
    description: The optimizer.
  weight_decay:
    type: number
    default: 1e-4
    description: The weight decay.
  lr_scheduler:
    type: string
    default: onecycle
    description: The learning rate scheduler.
  onecycle_pct_start:
    type: number
    default: 0.1
    description: The percentage of training when the lr will be at peak value.
  onecycle_div_factor:
    type: number
    default: 2
    description: The div factor for lr scheduler.
  onecycle_final_div_factor:
    type: number
    default: 1e2
    description: The final div factor for lr scheduler.
  loss:
    type: string
    default: dice
    description: The loss function.
  tta:
    type: string
    default: False
    description: Use TTA.
  tta_merge_mode:
    type: string
    default: max
    description: The TTA merge mode.
  decision_threshold:
    type: number
    default: 0.48
    description: The decision threshold.
  monitor_metric:
    type: string
    default: val/dice
    description: The metric to monitor for early stopping.
  save_top_k:
    type: integer
    default: 1
    description: How many top-k checkpoints to save.
  early_stopping_patience:
    type: integer
    default: 7
    description: Early stopping patience in epochs.
  precision:
    type: string
    default: 16-mixed
    description: The training precision.
  epochs:
    type: integer
    default: 10
    description: The epochs.
  accumulate_grad_batches:
    type: integer
    default: 1
    description: Accumulates gradients over k batches before stepping the optimizer.
  val_check_interval:
    type: number
    default: 1
    description: How often to check the validation set.
  benchmark:
    type: string
    default: False
    description: Value to set torch.backends.cudnn.benchmark to.
  swa:
    type: string
    default: False
    description: Use Stochastic Weight Averaging.
  swa_epoch_start:
    type: number
    default: 0.5
    description: When SWA should kick in as % of all epochs.
  swa_annealing_epochs:
    type: integer
    default: 10
    description: Number of epochs for SWA annealing LR.
  swa_lr:
    type: number
    default: 3e-5
    description: Final LR for SWA annealing.
  sahi:
    type: string
    default: False
    description: Use SAHI for training (random cropping input images).

outputs:
  output_dir:
    type: uri_folder
    description: The output dir.

environment: azureml:acpt-train-env@latest

resources:
  shm_size: "12g"

code: ../..
command: >-
  PYTHONPATH=$PYTHONPATH:. ; export PYTHONPATH ;
  python ./kelp/nn/training/train.py
  --data_dir ${{inputs.data_dir}}
  --output_dir ${{outputs.output_dir}}
  --metadata_fp ${{inputs.metadata_file}}
  --dataset_stats_fp ${{inputs.dataset_stats_file}}
  --cv_split ${{inputs.cv_split}}
  --batch_size ${{inputs.batch_size}}
  --num_workers ${{inputs.num_workers}}
  --bands ${{inputs.bands}}
  --spectral_indices ${{inputs.spectral_indices}}
  --image_size ${{inputs.image_size}}
  --resize_strategy ${{inputs.resize_strategy}}
  --interpolation ${{inputs.interpolation}}
  --fill_missing_pixels_with_torch_nan ${{inputs.fill_missing_pixels_with_torch_nan}}
  --mask_using_qa ${{inputs.mask_using_qa}}
  --mask_using_water_mask ${{inputs.mask_using_water_mask}}
  --use_weighted_sampler ${{inputs.use_weighted_sampler}}
  --samples_per_epoch ${{inputs.samples_per_epoch}}
  --has_kelp_importance_factor ${{inputs.has_kelp_importance_factor}}
  --kelp_pixels_pct_importance_factor ${{inputs.kelp_pixels_pct_importance_factor}}
  --qa_ok_importance_factor ${{inputs.qa_ok_importance_factor}}
  --qa_corrupted_pixels_pct_importance_factor ${{inputs.qa_corrupted_pixels_pct_importance_factor}}
  --almost_all_water_importance_factor ${{inputs.almost_all_water_importance_factor}}
  --dem_nan_pixels_pct_importance_factor ${{inputs.dem_nan_pixels_pct_importance_factor}}
  --dem_zero_pixels_pct_importance_factor ${{inputs.dem_zero_pixels_pct_importance_factor}}
  --normalization_strategy ${{inputs.normalization_strategy}}
  --architecture ${{inputs.architecture}}
  --encoder ${{inputs.encoder}}
  --pretrained ${{inputs.pretrained}}
  --encoder_weights ${{inputs.encoder_weights}}
  --lr ${{inputs.lr}}
  --optimizer ${{inputs.optimizer}}
  --weight_decay ${{inputs.weight_decay}}
  --lr_scheduler ${{inputs.lr_scheduler}}
  --onecycle_pct_start ${{inputs.onecycle_pct_start}}
  --onecycle_div_factor ${{inputs.onecycle_div_factor}}
  --onecycle_final_div_factor ${{inputs.onecycle_final_div_factor}}
  --loss ${{inputs.loss}}
  --tta ${{inputs.tta}}
  --tta_merge_mode ${{inputs.tta_merge_mode}}
  --decision_threshold ${{inputs.decision_threshold}}
  --monitor_metric ${{inputs.monitor_metric}}
  --save_top_k ${{inputs.save_top_k}}
  --early_stopping_patience ${{inputs.early_stopping_patience}}
  --precision ${{inputs.precision}}
  --epochs ${{inputs.epochs}}
  --accumulate_grad_batches ${{inputs.accumulate_grad_batches}}
  --val_check_interval ${{inputs.val_check_interval}}
  --benchmark ${{inputs.benchmark}}
  --swa ${{inputs.swa}}
  --swa_epoch_start ${{inputs.swa_epoch_start}}
  --swa_annealing_epochs ${{inputs.swa_annealing_epochs}}
  --swa_lr ${{inputs.swa_lr}}
is_deterministic: false
